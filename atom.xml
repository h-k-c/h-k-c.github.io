<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OpenOrange</title>
  
  <subtitle>小成故事多</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hkcblog.com/"/>
  <updated>2019-02-21T06:39:33.511Z</updated>
  <id>http://hkcblog.com/</id>
  
  <author>
    <name>hkc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>阜阳市实验中学</title>
    <link href="http://hkcblog.com/2019/02/21/%E9%98%9C%E9%98%B3%E5%B8%82%E5%AE%9E%E9%AA%8C%E4%B8%AD%E5%AD%A6/"/>
    <id>http://hkcblog.com/2019/02/21/阜阳市实验中学/</id>
    <published>2019-02-21T06:20:02.000Z</published>
    <updated>2019-02-21T06:39:33.511Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/two.jpg" alt="课表"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/two.jpg&quot; alt=&quot;课表&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>03：从尾到头打印链表（java）</title>
    <link href="http://hkcblog.com/2019/02/06/%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8/"/>
    <id>http://hkcblog.com/2019/02/06/从尾到头打印链表/</id>
    <published>2019-02-06T14:18:13.000Z</published>
    <updated>2019-02-02T09:17:08.002Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题目简介</strong></p><p>输入一个链表，按链表值从尾到头的顺序返回一个ArrayList。</p><p><strong>思路</strong><br>使用递归先到链表的尾部，然后返回</p><p><strong>代码</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; arrayList=<span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printListFromTailToHead</span><span class="params">(ListNode listNode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(listNode!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.printListFromTailToHead(listNode.next);</span><br><span class="line">            arrayList.add(listNode.val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arrayList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;题目简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;输入一个链表，按链表值从尾到头的顺序返回一个ArrayList。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路&lt;/strong&gt;&lt;br&gt;使用递归先到链表的尾部，然后返回&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码&lt;/strong&gt;&lt;b
      
    
    </summary>
    
    
      <category term="剑指offer" scheme="http://hkcblog.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>02：替换空格（java）</title>
    <link href="http://hkcblog.com/2019/02/06/%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC%EF%BC%88%E5%89%91%E6%8C%87offer02%EF%BC%89/"/>
    <id>http://hkcblog.com/2019/02/06/替换空格（剑指offer02）/</id>
    <published>2019-02-06T13:18:13.000Z</published>
    <updated>2019-02-02T09:09:29.176Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题目描述</strong><br> &emsp;&emsp;请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。</p><p> <strong>思路</strong><br> 1.首先考虑边界情况<br> 2.计算原来的长度，重新替换后新的长度<br> 3.使用两个下标的移动来进行替换</p><p> <strong>关键代码</strong><br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">replaceSpace</span><span class="params">(<span class="keyword">char</span> *str,<span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//首先考虑字符串极端情况</span></span><br><span class="line">        <span class="keyword">if</span>(str==NULL||length&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算字符串的原来的长度（包括字符串的长度以及空格的长度）</span></span><br><span class="line">        <span class="keyword">int</span> nowlength=<span class="number">0</span>,blanklength=<span class="number">0</span>,i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(str[i]!=<span class="string">'\0'</span>)&#123;</span><br><span class="line">            ++nowlength;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">' '</span>)&#123;</span><br><span class="line">                ++blanklength;</span><br><span class="line">            &#125;</span><br><span class="line">            ++i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算替换后的字符串的长度</span></span><br><span class="line">        <span class="keyword">int</span> newlength=nowlength+blanklength*<span class="number">2</span>;</span><br><span class="line">        <span class="comment">//考虑长的长度的极限情况</span></span><br><span class="line">        <span class="keyword">if</span>(newlength&gt;length)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义两个下表指向两个字符串</span></span><br><span class="line">        <span class="keyword">int</span> a=nowlength;<span class="comment">//指向原来的字符串长度</span></span><br><span class="line">        <span class="keyword">int</span> b=newlength;</span><br><span class="line">        <span class="comment">//通过移动下表的方式来操作</span></span><br><span class="line">        <span class="keyword">while</span>(a&gt;=<span class="number">0</span>&amp;&amp;b&gt;a)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[a]==<span class="string">' '</span>)&#123;</span><br><span class="line">                str[b--]=<span class="string">'0'</span>;</span><br><span class="line">                str[b--]=<span class="string">'2'</span>;</span><br><span class="line">                str[b--]=<span class="string">'%'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                str[b--]=str[a];</span><br><span class="line">            &#125;</span><br><span class="line">            a--;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;题目描述&lt;/strong&gt;&lt;br&gt; &amp;emsp;&amp;emsp;请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;思路&lt;
      
    
    </summary>
    
    
      <category term="剑指offer" scheme="http://hkcblog.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://hkcblog.com/2019/02/02/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://hkcblog.com/2019/02/02/配置文件/</id>
    <published>2019-02-02T08:51:36.374Z</published>
    <updated>2019-02-18T06:50:36.088Z</updated>
    
    <content type="html"><![CDATA[<p>搭建框架基本的文件的使用:</p><p><strong>spring</strong>和相关的<strong>mybatis</strong>配置文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:spring/spring-*.xml"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.test"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:db.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlFactorySessionBean"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:com/test/mapper/**/*.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"typeAliasesPackage"</span> <span class="attr">value</span>=<span class="string">"com.test.pojo"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"plugins"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.github.pagehelper.PageInterceptor"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                            reasonable=true</span><br><span class="line">                            helperDialect=mysql</span><br><span class="line">                            supportMethodsArguments=true</span><br><span class="line">                            params=count=countSql</span><br><span class="line">                            autoRuntimeDialect=true</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"mapperScannerConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.test.mapper"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlFactorySessionBean"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSourceTransactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">transaction-manager</span>=<span class="string">"dataSourceTransactionManager"</span> <span class="attr">id</span>=<span class="string">"transactionAdvice"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"select*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"query*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"ask*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"Exception"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"Exception"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"add*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"Exception"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"Exception"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"insert*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"Exception"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">expression</span>=<span class="string">"execution(* com.test.service..*.*(..))"</span> <span class="attr">id</span>=<span class="string">"txCut"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"transactionAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"txCut"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--采用注解进行事务配置，请在Service的配置类上面加上注解标识--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"dataSourceTransactionManager"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>mapper</strong>文件的头文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>spring-servlet</strong>的配置文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.test.controller"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/jsp/"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"commonsMultipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"1000000000"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>log4j文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Global logging configuration</span><br><span class="line">log4j.rootLogger=INFO, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line">log4j.logger.com.test.mapper=DEBUG</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure></p><p>数据库配置文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql:<span class="comment">//localhost:3306/onlineqa?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=<span class="number">123456</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建框架基本的文件的使用:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;spring&lt;/strong&gt;和相关的&lt;strong&gt;mybatis&lt;/strong&gt;配置文件&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ssm的心得体会</title>
    <link href="http://hkcblog.com/2018/12/26/ssm%E7%9A%84%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A/"/>
    <id>http://hkcblog.com/2018/12/26/ssm的心得体会/</id>
    <published>2018-12-26T15:31:04.000Z</published>
    <updated>2018-12-26T15:41:12.217Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;首先这次简单的项目就是使用了maven工程写的员工信息的crud操作，使用的框架是ssm，当然其中的界面还有一点booststrap的使用。下面就详细的说一说这一次的收获与心得。<br>&emsp;&emsp;当自己只得到要做一个项目的时候，首先就是先要搭建自己的平台，也就是这一次的ssm平台，因为本次使用的是maven工程与以往的project不同，所以我先查阅了maven的具体的教程的使用：<a href="http://www.runoob.com/maven/maven-tutorial.html" target="_blank" rel="noopener">远程仓库</a>，这里有环境的配置以及详细的介绍。<br>&emsp;&emsp;maven的项目创建好了之后就是，搭建自己的环境。首先就是在Porn.xml中添加自己需要的jar的包，这种添加的方式和以往的project是不同的，不需要导入任何大的包。而是通过自动加载的方式。而我们只需要知道那些事自己需要的包的名称和版本号。这些在maven仓库中都能看到。<a href="https://mvnrepository.com/" target="_blank" rel="noopener">远程仓库</a>。<br>       &emsp;&emsp;等jar包加载完全之后就可以进行文件夹的创建，这种思想也是平时所用的mvc格式，就是数据层，服务层，控制层。然后就是配合框架用的配置文件。因为这里是框架的整个使用，所以项目中创建了<br>       &emsp;&emsp;<strong> dispatcherServlet-servlet文件（前端控制器）</strong>：其中配置了springMvc的配置文件，也就是包含逻辑的跳转。配置了视图解析器，也就是前缀和后缀。其中还有就是能支持springMvc更高级一些功能快捷的ajax请求。<br>&emsp;&emsp;<strong>applicationContext文件</strong>：这个文件是mybaits和spring的整合类。所以首先配置了spring的配置文件，其中包括配置数据源，在引入数据源的时候使用了配置文件.property文件这样更方便数据的修改，从而使结构更加的清晰。然后就是配置了spring和mybatis整合的配置文件的一些属性，也就是sqlSessionFactroy。其中需要指定的是项目中mybaits全局配置文件的位置，以及制定了mybaits的mapper的文件的位置，当然还包括之前配置的数据源。然后就是把mybaits的接口实现到ioc容器中，主要的实现就是扫描所有的dao的接口，加入ioc的容器中。然后就是配置一个可以批量执行的SQLSessionFactory作用是进行批量操作的时候使用比如插入一千条语句到数据库中，这个时候使用executor.BATCH,就很方便。然后就是事务的配置，主要是控制数据源。然后就是开启注解的事务，使用的是xml配置的形式的事务，其中包括切入点的表达式，配置事务的增强。<br><strong>注意：spring配置文件的核心点是数据源，与mybaits的整合，事务控制。</strong><br>      &emsp;&emsp;<strong>mybatis-config：</strong>这是mybaits的文件的配置，其中定义了驼峰规则，别名的定义，和分页的插件。<br>&emsp;&emsp;所有的配置文件配置好了之后在对web.xml中进行配置，其中包括启动Spring容器，配置springMvc有关的前端控制器拦截所有的请求，字符编码过滤器，使用rest风格的uri。</p><p><strong>以上就是ssm的环境的搭建以及配置简单介绍，下面就是进行项目开发中一些知识点和心得：</strong><br>&emsp;&emsp;首先是逆向工程的使用，逆向工程可以说是mybaits的一个非常好用的工具，其中包括一个main函数和一个.xml文件，配置文件中包含的内容是数据库连接信息，需要指定sql的映射文件，也就是生成.xml的文件。然后还要指定dao接口生成的位置mapper，也就是.java文件。还有就是指定了生成的表的策略，就是对应的表明和生成的bean类的名字。<a href="https://github.com/wenthywang/mybatis-generator/blob/master/generatorConfig.xml" target="_blank" rel="noopener">逆向工程的使用</a>其中有详细的介绍以及注释。在实现的过程中我们自己扩展了查询的操作。<br>&emsp;&emsp;然后我知道的是测试类的使用也就是junit的使用，在本次的项目中我们分别进行了对dao层的使用以及对springmvc功能的测试。在测试·dao层的时候主要就是获取sqlSessionFactory中的mapper，然后通过所对应的方法来进行crud才操作。注意的是需要指出Spring的文件。然后就是对springmvc等的测试。测试中使用虚拟mvc的请求，获取到处理结果。其中包括的方法初始化方法以及使用。<br>&emsp;&emsp;然后项目首先中使用的是静态的html以及配合boostrap的使用。通过查找文档，和jstl语句中foreach的使用以及标签库的使用。然后是通过使用js里面的jquery的使用。具体的boostrap使用和jquery的使用还有ajax的使用可以参考教程：<a href="http://www.runoob.com/jquery/jquery-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a>。其中包括了jquery和ajax的结合使用。<br>&emsp;&emsp;然后就是分页插件的使用，这个插件是mybaits提供的一款很好用的插件。还有就是使用了json数据的解析。详情可以观察<br>&emsp;&emsp;<strong>注意：项目的使用过程中学会查看文档很重要，很多使用的方法都详细的记录在文档上。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;emsp;首先这次简单的项目就是使用了maven工程写的员工信息的crud操作，使用的框架是ssm，当然其中的界面还有一点booststrap的使用。下面就详细的说一说这一次的收获与心得。&lt;br&gt;&amp;emsp;&amp;emsp;当自己只得到要做一个项目的时候，首先就是
      
    
    </summary>
    
    
      <category term="闲笔头" scheme="http://hkcblog.com/tags/%E9%97%B2%E7%AC%94%E5%A4%B4/"/>
    
  </entry>
  
  <entry>
    <title>01：二维数组中的查找（java）</title>
    <link href="http://hkcblog.com/2018/12/26/01%EF%BC%9A%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE%EF%BC%88java%EF%BC%89/"/>
    <id>http://hkcblog.com/2018/12/26/01：二维数组中的查找（java）/</id>
    <published>2018-12-26T13:18:13.000Z</published>
    <updated>2018-12-26T15:22:24.634Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题目描述</strong><br>   &emsp;&emsp;在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p><p><strong>简单的思路</strong></p><p>   &emsp;&emsp;最简单的方法就是遍历所有的元素，但是这种方法的效率最低。所以在原来的基础上进行了更新操作。通过题目可以得知，二维数组基本上是有顺序的，从左下角来看，向上的数字递减，向右的数字递增，因此从左下角开始查找的时候，当要查找的数字大时，向右移动，要查找的数字比左下角的小的时候，向上移动。</p><p><strong>代码</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">public boolean Find(int target, int [][] array) &#123;</span><br><span class="line"><span class="keyword">if</span>(array.length==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">   int len=array.length<span class="number">-1</span>,i=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>(i&lt;array[<span class="number">0</span>].length&amp;&amp;len&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(array[len][i]&gt;target)&#123;</span><br><span class="line">   len--;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>(array[len][i]&lt;target)&#123;</span><br><span class="line">   i++;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>注</strong>：代码只有关键函数；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;题目描述&lt;/strong&gt;&lt;br&gt;   &amp;emsp;&amp;emsp;在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。&lt;
      
    
    </summary>
    
    
      <category term="剑指offer" scheme="http://hkcblog.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
  </entry>
  
  <entry>
    <title>我与hexo的过往</title>
    <link href="http://hkcblog.com/2018/12/22/%E6%88%91%E4%B8%8Ehexo%E7%9A%84%E8%BF%87%E5%BE%80/"/>
    <id>http://hkcblog.com/2018/12/22/我与hexo的过往/</id>
    <published>2018-12-22T07:02:30.000Z</published>
    <updated>2018-12-22T07:16:59.898Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>&lt;一&gt;</strong> <strong>2018.12.22</strong><br>    一年前闲来无于是就准备写写博客与随笔，但是写博客的软件也是比较多的，找来找去最后还是准备使用git+hexo这个搭配，在配上自己的域名也会显得非常个性化。<br>然后出现的事故就是又一次电脑重装系统的时候一切的文件都没了，当时感觉很无奈，但是现在来看也不是大问题。现在想想也是后悔莫及。<br>    想想之前在博客里写过一套数据结构的基本解析，虽然不是很深奥，但是也是能基本的接触到皮毛再加上自己的理解。<br>    接下里的打算就是准备做一套剑指offer的解析。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; &lt;strong&gt;&amp;lt;一&amp;gt;&lt;/strong&gt; &lt;strong&gt;2018.12.22&lt;/strong&gt;&lt;br&gt;    一年前闲来无于是就准备写写博客与随笔，但是写博客的软件也是比较多的，找来找去最后还是准备使用git+hexo这个搭配，在配上自己的域名也会显得非常个
      
    
    </summary>
    
    
      <category term="闲笔头" scheme="http://hkcblog.com/tags/%E9%97%B2%E7%AC%94%E5%A4%B4/"/>
    
  </entry>
  
</feed>
